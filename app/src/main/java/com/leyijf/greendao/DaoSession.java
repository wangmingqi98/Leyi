package com.leyijf.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.leyijf.bean.BindedCardBean;
import com.leyijf.bean.FeeConfigBean;
import com.leyijf.bean.UserBean;
import com.leyijf.manager.Config;
import com.leyijf.manager.Type;

import com.leyijf.greendao.BindedCardBeanDao;
import com.leyijf.greendao.FeeConfigBeanDao;
import com.leyijf.greendao.UserBeanDao;
import com.leyijf.greendao.ConfigDao;
import com.leyijf.greendao.TypeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bindedCardBeanDaoConfig;
    private final DaoConfig feeConfigBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig configDaoConfig;
    private final DaoConfig typeDaoConfig;

    private final BindedCardBeanDao bindedCardBeanDao;
    private final FeeConfigBeanDao feeConfigBeanDao;
    private final UserBeanDao userBeanDao;
    private final ConfigDao configDao;
    private final TypeDao typeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bindedCardBeanDaoConfig = daoConfigMap.get(BindedCardBeanDao.class).clone();
        bindedCardBeanDaoConfig.initIdentityScope(type);

        feeConfigBeanDaoConfig = daoConfigMap.get(FeeConfigBeanDao.class).clone();
        feeConfigBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        typeDaoConfig = daoConfigMap.get(TypeDao.class).clone();
        typeDaoConfig.initIdentityScope(type);

        bindedCardBeanDao = new BindedCardBeanDao(bindedCardBeanDaoConfig, this);
        feeConfigBeanDao = new FeeConfigBeanDao(feeConfigBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        configDao = new ConfigDao(configDaoConfig, this);
        typeDao = new TypeDao(typeDaoConfig, this);

        registerDao(BindedCardBean.class, bindedCardBeanDao);
        registerDao(FeeConfigBean.class, feeConfigBeanDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(Config.class, configDao);
        registerDao(Type.class, typeDao);
    }
    
    public void clear() {
        bindedCardBeanDaoConfig.clearIdentityScope();
        feeConfigBeanDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
        configDaoConfig.clearIdentityScope();
        typeDaoConfig.clearIdentityScope();
    }

    public BindedCardBeanDao getBindedCardBeanDao() {
        return bindedCardBeanDao;
    }

    public FeeConfigBeanDao getFeeConfigBeanDao() {
        return feeConfigBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public TypeDao getTypeDao() {
        return typeDao;
    }

}
